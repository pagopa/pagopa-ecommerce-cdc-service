variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.caching=true"
  BRANCH_NAME: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]

trigger: none

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: pagopaEcommerceLocal
      type: github
      name: pagopa/pagopa-ecommerce-local
      ref: main
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: BuildAndUnitTest
    displayName: 'Code Review'
    jobs:
      - job: make_buildAndUnitTest
        displayName: "Build and Test"
        steps:
          - task: Cache@2
            displayName: 'Configure Gradle caching'
            inputs:
              key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts' # Swap build.gradle.kts for build.gradle when using Groovy
              restoreKeys: |
                gradle | "$(Agent.OS)"
                gradle
              path: $(GRADLE_USER_HOME)

          - task: SonarCloudPrepare@3
            displayName: 'Prepare SonarCloud analysis'
            inputs:
              SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
              organization: '$(SONARCLOUD_ORG)'
              scannerMode: Other
              extraProperties: |
                sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
                sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
                sonar.coverage.exclusions=**/config/*,**/*Mock*,**/model/*
                sonar.coverage.jacoco.xmlReportPaths=./build/reports/jacoco/test/jacocoTestReport.xml
                sonar.junit.reportPaths=./build/test-results/test

          # run the main build
          - task: Gradle@3
            displayName: 'Run Gradle build and tests'
            inputs:
              gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.
              tasks: 'build' # string. Required. Tasks. Default: build.
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.
              codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
              codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.
              javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
              jdkVersionOption: '1.21' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
              sonarQubeRunAnalysis: true
            env:
              GITHUB_TOKEN: $(GITHUB_RO_TOKEN)

          - task: SonarCloudPublish@3
            displayName: 'Publish SonarCloud results on build summary'
            inputs:
              pollingTimeoutSec: '300'

          - script: |
              # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
              ./gradlew --stop
            displayName: 'Stop the Gradle daemon'

          - task: PublishCodeCoverageResults@2
            displayName: 'Publish Code Coverage on Azure Devops'
            inputs:
              codeCoverageTool: 'JaCoCo'
              summaryFileLocation: 'build/reports/jacoco/test/jacocoTestReport.xml'
              reportDirectory: 'build/reports/jacoco/test/html'

  - stage: IntegrationTestEcommerceLocal
    displayName: "Integration Tests"
    dependsOn: [ ]
    jobs:
      - job: make_IntegrationTestEcommerceLocal
        displayName: "Integration test using ecommerce-local environment"
        steps:
          - checkout: pagopaEcommerceLocal

          - script: |
              echo "##[debug] Change placeholder for ecommerce-cdc-service set branch: $(BRANCH_NAME)"
              sed -i "s/^ECOMMERCE_CDC_COMMIT_SHA=.*$/ECOMMERCE_CDC_COMMIT_SHA=$(BRANCH_NAME)/" .env
            displayName: 'Change ecommerce-cdc-service branch name ecommerce-local .env'

          - script: |
              echo "Overriding environment files to enable async view update"
              sed -i "s/^TRANSACTIONSVIEW_UPDATE_ENABLED=.*$/TRANSACTIONSVIEW_UPDATE_ENABLED=false/" ./pagopa-ecommerce-transactions-service/transactions-service.env
              sed -i "s/^TRANSACTIONSVIEW_UPDATE_ENABLED=.*$/TRANSACTIONSVIEW_UPDATE_ENABLED=false/" ./pagopa-ecommerce-event-dispatcher-service/event-dispatcher-service.env
              sed -i "s/^TRANSACTIONSVIEW_UPDATE_ENABLED=.*$/TRANSACTIONSVIEW_UPDATE_ENABLED=false/" ./pagopa-ecommerce-transactions-scheduler-service/transactions-scheduler-service.env
              sed -i "s/^ECOMMERCE_TRANSACTION_VIEW_COLLECTION_NAME=.*$/ECOMMERCE_TRANSACTION_VIEW_COLLECTION_NAME=transactions-view/" ./pagopa-ecommerce-cdc-service/ecommerce-cdc-service.env
            displayName: 'Override environment files to enable async view update'

          - script: |
              docker compose up \
              pagopa-ecommerce-cdc-service \
              pagopa-ecommerce-transactions-service \
              pagopa-ecommerce-payment-methods-service \
              pagopa-ecommerce-event-dispatcher-service \
              mongo \
              redis \
              storage \
              pagopa-pdv-mock \
              pagopa-gec-mock \
              pagopa-npg-mock \
              pagopa-node-mock \
              traefik \
              azurite-init \
              pagopa-psp-mock \
              pagopa-jwt-issuer-mock \
              -d
            displayName: 'eCommerce local docker compose up'
            env:
              GITHUB_TOKEN: $(GITHUB_RO_TOKEN)

          - script: |
              timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8099/actuator/health/liveness)" != "200" ]]; do sleep 5; done' || exit 1
            displayName: 'Health check CDC service'

          - script: |
              timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/actuator/health/liveness)" != "200" ]]; do sleep 5; done' || exit 1
            displayName: 'Health check transactions service'

          - script: yarn global add newman
            displayName: 'newman installation'

          - script: |
              newman run api-tests/transaction-service/npg/transaction-service_ecommerce_local.postman_collection.json \
              --environment=api-tests/transaction-service/npg/transaction-service_ecommerce_local.postman_environment.json \
              --reporters cli,junit \
              --reporter-junit-export Results/NPG-api-TEST.xml
            displayName: 'Run api test for NPG integration'

          - script: |
              newman run api-tests/transaction-service/redirect/transaction-service_ecommerce_local.postman_collection.json \
              --environment=api-tests/transaction-service/redirect/transaction-service_ecommerce_local.postman_environment.json \
              --reporters cli,junit \
              --reporter-junit-export Results/REDIRECT-api-TEST.xml
            displayName: 'Run api test for REDIRECT integration'

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*-TEST.xml'
              searchFolder: '$(System.DefaultWorkingDirectory)'
            displayName: 'Publish Integration Test Results'
